name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          # https://docs.github.com/en/actions/writing-workflows/choosing-where-your-workflow-runs/choosing-the-runner-for-a-job
          - os: ubuntu-latest

          - os: ubuntu-latest
            image: ubuntu:22.04
          - os: ubuntu-latest
            image: ubuntu:24.04

          - os: ubuntu-latest
            image: fedora:41
          - os: ubuntu-latest
            image: fedora:42

          - os: ubuntu-latest
            image: debian:11
          - os: ubuntu-latest
            image: debian:12

          - os: ubuntu-latest
            image: alpine:3

          - os: ubuntu-24.04-arm

          # - os: ubuntu-24.04-arm
          #  image: ubuntu:22.04
          - os: ubuntu-24.04-arm
            image: ubuntu:24.04

          - os: ubuntu-24.04-arm
            image: debian:11
          - os: ubuntu-24.04-arm
            image: debian:12

          - os: ubuntu-24.04-arm
            image: fedora:41
          - os: ubuntu-24.04-arm
            image: fedora:42

          # - os: ubuntu-24.04-arm
          #   image: alpine:3

          - os: macos-13
          - os: macos-14
          - os: macos-15

          - os: ubuntu-latest
            image: ubuntu:24.04
            target: x86_64-w64-mingw32

    runs-on: ${{ matrix.build.os }}

    container: ${{ matrix.build.image }}

    steps:
      # https://github.com/actions/checkout
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Dependencies (alpine)
        if: ${{ startsWith(matrix.build.image, 'alpine') }}
        run: |
          apk --no-cache add make gcc musl-dev linux-headers

      - name: Dependencies (ubuntu, debian)
        if: ${{ startsWith(matrix.build.image, 'ubuntu') || startsWith(matrix.build.image, 'debian') }}
        run: |
          apt-get update
          apt-get install -y build-essential

      - name: Dependencies (fedora)
        if: ${{ startsWith(matrix.build.image, 'fedora') }}
        run: |
          dnf group install -y development-tools c-development

      - name: Build (mingw)
        if: ${{ contains(matrix.build.target, 'mingw') }}
        run: |
          apt-get update
          apt-get install -y mingw-w64
          make mingw

      - name: Build
        run: make

      - name: Test
        run: make test
